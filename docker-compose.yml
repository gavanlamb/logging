version: '3.9'
services:
  loki:
    image: grafana/loki:2.8.4
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki/config.yml
    configs:
      - source: loki_config
        target: /etc/loki/config.yml
    networks:
      - services
    ports:
      - target: 3200
        published: 3200
        mode: host
        protocol: tcp
    volumes:
      - loki:/loki
    environment:
      JAEGER_SERVICE_NAME: loki
      JAEGER_AGENT_HOST: tempo
      JAEGER_AGENT_PORT: 6831
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      MINIO_USERNAME: ${MINIO_USER_SERVICE_ACCOUNT_ACCESSKEY}
      MINIO_PASSWORD: ${MINIO_USER_SERVICE_ACCOUNT_SECRETKEY}
    deploy:
      replicas: 1
      placement:
        constraints:         
          - "node.labels.logging_host==true"
          - "node.platform.os==linux"
      rollback_config:
        parallelism: 0
        failure_action: continue
        order: stop-first
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: stop-first
      labels:
        prometheus.job: loki
        prometheus.port: 3200
        prometheus.path: /metrics
    logging:
      options:
        loki-external-labels: "job=loki"
  promtail:
    image: grafana/promtail:2.8.4
    volumes:
      - /var/log:/var/log
    command:
      - -config.file=/etc/promtail/config.yml
      - -config.expand-env=true
    networks:
      - services
    configs:
      - source: promtail_config
        target: /etc/promtail/config.yml
    environment:
      JAEGER_SERVICE_NAME: promtail
      JAEGER_AGENT_HOST: tempo
      JAEGER_AGENT_PORT: 6831
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
    deploy:
      mode: global
      placement:
        constraints:
          - "node.platform.os==linux"
      rollback_config:
        parallelism: 0
        failure_action: continue
        order: stop-first
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: stop-first
      labels:
        prometheus.job: promtail
        prometheus.port: 3300
        prometheus.path: /metrics
    logging:
      options:
        loki-external-labels: "job=promtail"
  create-bucket:
    image: gavanlamb/minio-create-bucket:v1.0.0
    networks:
      - services
    environment:
      ADMIN_USERNAME: ${MINIO_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${MINIO_ADMIN_PASSWORD}
      DEPLOYMENT_NAME: gavanlamb
      DEPLOYMENT_URL: http://minio:3700
      DEPLOYMENT_REGION: darlinghurst
      NEW_BUCKET_NAME: loki
      NEW_GROUP_NAME: loki
      NEW_POLICY_PREFIX: loki
      NEW_USER_NAME: loki
      NEW_USER_PASSWORD: ${MINIO_USER_PASSWORD}
      NEW_USER_SERVICE_ACCOUNT_ACCESSKEY: ${MINIO_USER_SERVICE_ACCOUNT_ACCESSKEY}
      NEW_USER_SERVICE_ACCOUNT_SECRETKEY: ${MINIO_USER_SERVICE_ACCOUNT_SECRETKEY}
    deploy:
      mode: replicated
      restart_policy:
        condition: none
      placement:
        constraints:
          - "node.platform.os==linux"
    logging:
      options:
        loki-external-labels: "job=loki-create-bucket"

configs:
  loki_config:
    file: config/loki.yml
    name: loki_config
  promtail_config:
    file: config/promtail.yml
    name: promtail_config
  
volumes:
  loki:
    name: loki
    driver_opts:
      type: "nfs"
      o: "nfsvers=4,addr=192.168.50.32,rw,noatime,rsize=8192,wsize=8192,tcp"
      device: ":/share/docker/loki"

networks:
  services:
    name: services
    external: true
